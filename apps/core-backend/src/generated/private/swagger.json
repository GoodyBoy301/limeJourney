{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"_36_Enums.ChannelType": {
				"type": "string",
				"enum": [
					"EMAIL",
					"SMS",
					"PUSH"
				]
			},
			"_36_Enums.TemplateStatus": {
				"type": "string",
				"enum": [
					"DRAFT",
					"ACTIVE",
					"ARCHIVED"
				]
			},
			"DefaultSelection_Prisma._36_TemplatePayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"messagingProfileId": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/_36_Enums.TemplateStatus"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"content": {
						"type": "string"
					},
					"previewText": {
						"type": "string"
					},
					"subjectLine": {
						"type": "string"
					},
					"channel": {
						"$ref": "#/components/schemas/_36_Enums.ChannelType"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"messagingProfileId",
					"organizationId",
					"status",
					"tags",
					"content",
					"previewText",
					"subjectLine",
					"channel",
					"name",
					"id"
				],
				"type": "object"
			},
			"Template": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_TemplatePayload_",
				"description": "Model Template"
			},
			"ApiResponse_Template_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Template"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_null_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"anyOf": [],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PrismaChannelType": {
				"$ref": "#/components/schemas/_36_Enums.ChannelType"
			},
			"ChannelType": {
				"$ref": "#/components/schemas/PrismaChannelType"
			},
			"PrismaTemplateStatus": {
				"$ref": "#/components/schemas/_36_Enums.TemplateStatus"
			},
			"TemplateStatus": {
				"$ref": "#/components/schemas/PrismaTemplateStatus"
			},
			"CreateTemplateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"channel": {
						"$ref": "#/components/schemas/ChannelType"
					},
					"subjectLine": {
						"type": "string"
					},
					"previewText": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"status": {
						"$ref": "#/components/schemas/TemplateStatus"
					},
					"messagingProfileId": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"channel",
					"subjectLine",
					"previewText",
					"content",
					"tags",
					"status",
					"messagingProfileId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateTemplateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"channel": {
						"$ref": "#/components/schemas/ChannelType"
					},
					"subjectLine": {
						"type": "string",
						"nullable": true
					},
					"previewText": {
						"type": "string",
						"nullable": true
					},
					"content": {
						"type": "string"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"status": {
						"$ref": "#/components/schemas/TemplateStatus"
					},
					"messagingProfileId": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Template-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Template"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SegmentCriterionType": {
				"enum": [
					"property",
					"event"
				],
				"type": "string"
			},
			"SegmentOperator": {
				"enum": [
					"equals",
					"not_equals",
					"greater_than",
					"less_than",
					"contains",
					"not_contains",
					"in",
					"not_in",
					"between",
					"not_between",
					"has_done",
					"has_not_done",
					"has_done_times",
					"has_done_first_time",
					"has_done_last_time",
					"has_done_within",
					"has_not_done_within"
				],
				"type": "string"
			},
			"SegmentCriterion": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/SegmentCriterionType"
					},
					"field": {
						"type": "string"
					},
					"operator": {
						"$ref": "#/components/schemas/SegmentOperator"
					},
					"value": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "boolean"
							}
						]
					},
					"timeUnit": {
						"type": "string",
						"enum": [
							"minutes",
							"hours",
							"days"
						]
					}
				},
				"required": [
					"type",
					"field",
					"operator",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogicalOperator": {
				"enum": [
					"and",
					"or"
				],
				"type": "string"
			},
			"SegmentCondition": {
				"properties": {
					"criteria": {
						"items": {
							"$ref": "#/components/schemas/SegmentCriterion"
						},
						"type": "array"
					},
					"logicalOperator": {
						"$ref": "#/components/schemas/LogicalOperator"
					}
				},
				"required": [
					"criteria",
					"logicalOperator"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Segment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"$ref": "#/components/schemas/SegmentCondition"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"organizationId",
					"conditions",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Segment_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Segment"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateSegmentDTO": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"$ref": "#/components/schemas/SegmentCondition"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"description",
					"conditions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateSegmentDTO": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"$ref": "#/components/schemas/SegmentCondition"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_boolean_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"type": "boolean",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Segment-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Segment"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_string-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SegmentAnalytics": {
				"properties": {
					"segmentId": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"growthRate": {
						"type": "number",
						"format": "double"
					},
					"commonCharacteristics": {
						"items": {
							"properties": {},
							"additionalProperties": {},
							"type": "object"
						},
						"type": "array"
					},
					"conversionRate": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"segmentId",
					"size",
					"growthRate",
					"commonCharacteristics"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_SegmentAnalytics_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SegmentAnalytics"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"_36_Enums.SubscriptionStatus": {
				"type": "string",
				"enum": [
					"ACTIVE",
					"INACTIVE",
					"PAST_DUE",
					"CANCELLED"
				]
			},
			"DefaultSelection_Prisma._36_OrganizationPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"subscriptionPeriodEnd": {
						"type": "string",
						"format": "date-time"
					},
					"subscriptionPeriodStart": {
						"type": "string",
						"format": "date-time"
					},
					"planId": {
						"type": "string"
					},
					"subscriptionStatus": {
						"$ref": "#/components/schemas/_36_Enums.SubscriptionStatus"
					},
					"subscriptionId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"subscriptionPeriodEnd",
					"subscriptionPeriodStart",
					"planId",
					"subscriptionStatus",
					"subscriptionId",
					"name",
					"id"
				],
				"type": "object"
			},
			"Organization": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_OrganizationPayload_",
				"description": "Model Organization"
			},
			"ApiResponse_Organization-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Organization"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_void_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Organization_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Organization"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"_36_Enums.InvitationStatus": {
				"type": "string",
				"enum": [
					"PENDING",
					"ACCEPTED",
					"REJECTED"
				]
			},
			"DefaultSelection_Prisma._36_InvitationPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/_36_Enums.InvitationStatus"
					},
					"invitedBy": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"expiresAt",
					"status",
					"invitedBy",
					"organizationId",
					"email",
					"id"
				],
				"type": "object"
			},
			"Invitation": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_InvitationPayload_",
				"description": "Model Invitation"
			},
			"ApiResponse_Invitation_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Invitation"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"_36_Enums.UserRole": {
				"type": "string",
				"enum": [
					"ADMIN",
					"MEMBER"
				]
			},
			"DefaultSelection_Prisma._36_OrganizationMemberPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"role": {
						"$ref": "#/components/schemas/_36_Enums.UserRole"
					},
					"organizationId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"role",
					"organizationId",
					"userId",
					"id"
				],
				"type": "object"
			},
			"OrganizationMember": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_OrganizationMemberPayload_",
				"description": "Model OrganizationMember"
			},
			"ApiResponse_OrganizationMember_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationMember"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptInvitationDto": {
				"properties": {
					"invitationId": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"invitationId",
					"email",
					"name",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Prisma.JsonValue": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					},
					{
						"type": "boolean"
					},
					{
						"$ref": "#/components/schemas/Prisma.JsonObject"
					},
					{
						"$ref": "#/components/schemas/Prisma.JsonArray"
					}
				],
				"nullable": true,
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches any valid JSON value."
			},
			"Prisma.JsonObject": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/Prisma.JsonValue"
				},
				"type": "object",
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON object.\nThis type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from."
			},
			"Prisma.JsonArray": {
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON array.",
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"DefaultSelection_Prisma._36_MessagingProfilePayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string"
					},
					"credentials": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"requiredFields": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"integrationId": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"status",
					"credentials",
					"requiredFields",
					"integrationId",
					"organizationId",
					"name",
					"id"
				],
				"type": "object"
			},
			"MessagingProfile": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_MessagingProfilePayload_",
				"description": "Model MessagingProfile"
			},
			"ApiResponse_MessagingProfile_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MessagingProfile"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_MessagingProfile.Exclude_keyofMessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"integrationId": {
						"type": "string"
					},
					"requiredFields": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"credentials": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					}
				},
				"required": [
					"name",
					"status",
					"integrationId",
					"requiredFields",
					"credentials"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_MessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId_": {
				"$ref": "#/components/schemas/Pick_MessagingProfile.Exclude_keyofMessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Record_string.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"CreateMessagingProfileInput": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_MessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId_"
					},
					{
						"properties": {
							"requiredFields": {
								"$ref": "#/components/schemas/Record_string.string_"
							},
							"credentials": {
								"$ref": "#/components/schemas/Record_string.string_"
							}
						},
						"required": [
							"requiredFields",
							"credentials"
						],
						"type": "object"
					}
				]
			},
			"DefaultSelection_Prisma._36_MessagingIntegrationPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"confidentialFields": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"requiredFields": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"providerName": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"confidentialFields",
					"requiredFields",
					"providerName",
					"type",
					"name",
					"id"
				],
				"type": "object"
			},
			"MessagingIntegration": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_MessagingIntegrationPayload_",
				"description": "Model MessagingIntegration"
			},
			"ApiResponse_MessagingIntegration-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/MessagingIntegration"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_MessagingProfile-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/MessagingProfile"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateMessagingProfileInput_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"integrationId": {
						"type": "string"
					},
					"requiredFields": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Prisma.JsonValue"
							},
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						]
					},
					"credentials": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Prisma.JsonValue"
							},
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"DefaultSelection_Prisma._36_MessageLogPayload_": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"metadata": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"status": {
						"type": "string"
					},
					"event": {
						"type": "string"
					},
					"messagingProfileId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"createdAt",
					"metadata",
					"status",
					"event",
					"messagingProfileId",
					"id"
				],
				"type": "object"
			},
			"MessageLog": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_MessageLogPayload_",
				"description": "Model MessageLog"
			},
			"ApiResponse_MessageLog-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/MessageLog"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_any_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_MessagingIntegration_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MessagingIntegration"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateMessagingIntegrationInput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"providerName": {
						"type": "string"
					},
					"requiredFields": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"confidentialFields": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"type",
					"providerName",
					"requiredFields",
					"confidentialFields"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateMessagingIntegrationInput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"providerName": {
						"type": "string"
					},
					"requiredFields": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"JourneyNode": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"id",
					"type",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JourneyEdge": {
				"properties": {
					"id": {
						"type": "string"
					},
					"source": {
						"type": "string"
					},
					"target": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"source",
					"target",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JourneyDefinition": {
				"properties": {
					"nodes": {
						"items": {
							"$ref": "#/components/schemas/JourneyNode"
						},
						"type": "array"
					},
					"edges": {
						"items": {
							"$ref": "#/components/schemas/JourneyEdge"
						},
						"type": "array"
					}
				},
				"required": [
					"nodes",
					"edges"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_CreateJourneyDTO.Exclude_keyofCreateJourneyDTO.organizationId__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"DRAFT",
							"ACTIVE",
							"ARCHIVED",
							"PAUSED"
						]
					},
					"definition": {
						"$ref": "#/components/schemas/JourneyDefinition"
					},
					"runMultipleTimes": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"definition",
					"runMultipleTimes"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_CreateJourneyDTO.organizationId_": {
				"$ref": "#/components/schemas/Pick_CreateJourneyDTO.Exclude_keyofCreateJourneyDTO.organizationId__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Pick_UpdateJourneyDTO.Exclude_keyofUpdateJourneyDTO.organizationId-or-id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"DRAFT",
							"ACTIVE",
							"ARCHIVED",
							"PAUSED"
						]
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_UpdateJourneyDTO.organizationId-or-id_": {
				"$ref": "#/components/schemas/Pick_UpdateJourneyDTO.Exclude_keyofUpdateJourneyDTO.organizationId-or-id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"_36_Enums.JourneyStatus": {
				"type": "string",
				"enum": [
					"DRAFT",
					"ACTIVE",
					"ARCHIVED",
					"PAUSED"
				]
			},
			"DefaultSelection_Prisma._36_JourneyPayload_": {
				"properties": {
					"runMultipleTimes": {
						"type": "boolean"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/_36_Enums.JourneyStatus"
					},
					"definition": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"organizationId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"runMultipleTimes",
					"updatedAt",
					"createdAt",
					"status",
					"definition",
					"organizationId",
					"name",
					"id"
				],
				"type": "object"
			},
			"JourneyWithMetrics": {
				"properties": {
					"runMultipleTimes": {
						"type": "boolean"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/_36_Enums.JourneyStatus"
					},
					"definition": {
						"$ref": "#/components/schemas/Prisma.JsonValue"
					},
					"organizationId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"metrics": {
						"properties": {
							"completionRate": {
								"type": "number",
								"format": "double"
							},
							"totalUsers": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"completionRate",
							"totalUsers"
						],
						"type": "object"
					}
				},
				"required": [
					"runMultipleTimes",
					"updatedAt",
					"createdAt",
					"status",
					"definition",
					"organizationId",
					"name",
					"id",
					"metrics"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_JourneyWithMetrics-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/JourneyWithMetrics"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"StepMetric": {
				"properties": {
					"total": {
						"type": "number",
						"format": "double"
					},
					"completed": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"total",
					"completed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JourneyMetrics": {
				"properties": {
					"totalUsers": {
						"type": "number",
						"format": "double"
					},
					"completedUsers": {
						"type": "number",
						"format": "double"
					},
					"completionRate": {
						"type": "number",
						"format": "double"
					},
					"averageCompletionTime": {
						"type": "number",
						"format": "double"
					},
					"stepMetrics": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/StepMetric"
						},
						"type": "object"
					}
				},
				"required": [
					"totalUsers",
					"completedUsers",
					"completionRate",
					"averageCompletionTime",
					"stepMetrics"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_JourneyMetrics_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/JourneyMetrics"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JourneyActivity": {
				"properties": {
					"id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"nodeId": {
						"type": "string"
					},
					"nodeName": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"timestamp": {
						"type": "string",
						"format": "date-time"
					},
					"data": {}
				},
				"required": [
					"id",
					"userId",
					"nodeId",
					"nodeName",
					"type",
					"status",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_JourneyActivity-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/JourneyActivity"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse__activities-JourneyActivity-Array--totalCount-number__": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"properties": {
							"totalCount": {
								"type": "number",
								"format": "double"
							},
							"activities": {
								"items": {
									"$ref": "#/components/schemas/JourneyActivity"
								},
								"type": "array"
							}
						},
						"required": [
							"totalCount",
							"activities"
						],
						"type": "object",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse___91_key-string_93__58_number__": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"properties": {},
						"additionalProperties": {
							"type": "number",
							"format": "double"
						},
						"type": "object",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InsightResponse": {
				"properties": {
					"insight": {
						"type": "string"
					},
					"confidence": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"insight",
					"confidence"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_InsightResponse_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/InsightResponse"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InsightQuery": {
				"properties": {
					"query": {
						"type": "string"
					}
				},
				"required": [
					"query"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RecentQuery": {
				"properties": {
					"query": {
						"type": "string"
					},
					"response": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"query",
					"response",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_OrganizationInsights-at-recentQueries_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/RecentQuery"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrganizationInsights": {
				"properties": {
					"recentQueries": {
						"items": {
							"$ref": "#/components/schemas/RecentQuery"
						},
						"type": "array"
					},
					"uniqueEvents": {
						"properties": {},
						"additionalProperties": {
							"type": "number",
							"format": "double"
						},
						"type": "object"
					},
					"totalEntities": {
						"type": "number",
						"format": "double"
					},
					"totalEvents": {
						"type": "number",
						"format": "double"
					},
					"averageEventsPerEntity": {
						"type": "number",
						"format": "double"
					},
					"activeEntitiesLast30Days": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"recentQueries",
					"uniqueEvents",
					"totalEntities",
					"totalEvents",
					"averageEventsPerEntity",
					"activeEntitiesLast30Days"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_OrganizationInsights_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationInsights"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.any_": {
				"properties": {},
				"additionalProperties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"EventData": {
				"properties": {
					"id": {
						"type": "string"
					},
					"org_id": {
						"type": "string"
					},
					"entity_id": {
						"type": "string"
					},
					"entity_external_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"timestamp": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					}
				},
				"required": [
					"org_id",
					"entity_id",
					"entity_external_id",
					"name",
					"properties",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EventData_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EventData"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RecordEventRequest": {
				"properties": {
					"entity_external_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"entity_external_id",
					"name",
					"properties"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EventData-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EventData"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EntityData": {
				"properties": {
					"id": {
						"type": "string"
					},
					"org_id": {
						"type": "string"
					},
					"external_id": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"org_id",
					"properties",
					"created_at",
					"updated_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityData_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EntityData"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateOrUpdateEntityRequest": {
				"properties": {
					"external_id": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"properties"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EntityWithSegments": {
				"properties": {
					"id": {
						"type": "string"
					},
					"org_id": {
						"type": "string"
					},
					"external_id": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"segments": {
						"items": {
							"properties": {
								"createdAt": {
									"type": "string",
									"format": "date-time"
								},
								"description": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"createdAt",
								"description",
								"name",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"org_id",
					"properties",
					"created_at",
					"updated_at",
					"segments"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityWithSegments_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EntityWithSegments"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityWithSegments-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EntityWithSegments"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityData-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EntityData"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse__totalEntities-number--oldestEntity-string--newestEntity-string--uniqueExternalIds-number__": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"properties": {
							"uniqueExternalIds": {
								"type": "number",
								"format": "double"
							},
							"newestEntity": {
								"type": "string"
							},
							"oldestEntity": {
								"type": "string"
							},
							"totalEntities": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"uniqueExternalIds",
							"newestEntity",
							"oldestEntity",
							"totalEntities"
						],
						"type": "object",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthData": {
				"properties": {
					"user": {
						"properties": {
							"role": {
								"type": "string"
							},
							"organizationId": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"email": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"role",
							"organizationId",
							"name",
							"email",
							"id"
						],
						"type": "object"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_AuthData_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/AuthData"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiKey": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"key": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"lastUsedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"key",
					"organizationId",
					"createdAt",
					"lastUsedAt",
					"expiresAt",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ApiKey_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ApiKey"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GenerateApiKeyRequest": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ApiKey-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ApiKey"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "core-backend",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/templates": {
			"post": {
				"operationId": "CreateTemplate",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_Template_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Templates"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateTemplateRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetTemplates",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_Template-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Templates"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "channel",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/ChannelType"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/TemplateStatus"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/templates/{templateId}": {
			"get": {
				"operationId": "GetTemplate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_Template_"
										},
										{}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Templates"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "templateId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateTemplate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_Template_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Templates"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "templateId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateTemplateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteTemplate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_null_"
										},
										{}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Templates"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "templateId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/templates/{templateId}/duplicate": {
			"post": {
				"operationId": "DuplicateTemplate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_Template_"
										},
										{}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Templates"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "templateId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/docs": {
			"get": {
				"operationId": "GetSwaggerUI",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Documentation"
				],
				"security": [],
				"parameters": []
			}
		},
		"/segments": {
			"post": {
				"operationId": "CreateSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment_"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateSegmentDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListSegments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment-Array_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/segments/{segmentId}": {
			"get": {
				"operationId": "GetSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment_"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment_"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateSegmentDTO"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_boolean_"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/segments/{segmentId}/entities": {
			"get": {
				"operationId": "GetEntitiesInSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_string-Array_"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/segments/{segmentId}/analytics": {
			"get": {
				"operationId": "GetSegmentAnalytics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_SegmentAnalytics_"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/segments/entity/{entityId}": {
			"get": {
				"operationId": "GetSegmentsForEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment-Array_"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/organizations": {
			"get": {
				"operationId": "ListOrganizations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								}
							}
						}
					},
					"201": {
						"description": "Organization created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/switch/{organizationId}": {
			"put": {
				"operationId": "SwitchOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_void_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/organizations/{organizationId}": {
			"put": {
				"operationId": "UpdateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/{organizationId}/invite": {
			"post": {
				"operationId": "InviteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Invitation_"
								}
							}
						}
					},
					"201": {
						"description": "Invitation sent successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Invitation_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									}
								},
								"required": [
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/accept-invitation": {
			"post": {
				"operationId": "AcceptInvitation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_OrganizationMember_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AcceptInvitationDto"
							}
						}
					}
				}
			}
		},
		"/messaging-profiles": {
			"post": {
				"operationId": "CreateProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMessagingProfileInput"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetProfiles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/messaging-profiles/integrations": {
			"get": {
				"operationId": "GetIntegrations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/messaging-profiles/{id}": {
			"get": {
				"operationId": "GetProfileById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_CreateMessagingProfileInput_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/messaging-profiles/{id}/logs": {
			"get": {
				"operationId": "GetProfileLogs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessageLog-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 100,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"default": 0,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/messaging-profiles/{id}/analytics": {
			"get": {
				"operationId": "GetProfileAnalytics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/messaging-integrations": {
			"post": {
				"operationId": "CreateIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration_"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMessagingIntegrationInput"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetIntegrations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/admin/messaging-integrations/{id}": {
			"put": {
				"operationId": "UpdateIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration_"
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateMessagingIntegrationInput"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/journeys": {
			"post": {
				"operationId": "CreateJourney",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_any_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Journeys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_CreateJourneyDTO.organizationId_"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListJourneys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_JourneyWithMetrics-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Journeys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/journeys/{journeyId}": {
			"put": {
				"operationId": "UpdateJourney",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_any_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Journeys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "journeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_UpdateJourneyDTO.organizationId-or-id_"
							}
						}
					}
				}
			}
		},
		"/journeys/{journeyId}/metrics": {
			"get": {
				"operationId": "GetJourneyMetrics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_JourneyMetrics_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Journeys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "journeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/journeys/{journeyId}/activity/recent": {
			"get": {
				"operationId": "GetRecentJourneyActivity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_JourneyActivity-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Journeys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "journeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/journeys/{journeyId}/activity/feed": {
			"get": {
				"operationId": "GetJourneyActivityFeed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse__activities-JourneyActivity-Array--totalCount-number__"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Journeys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "journeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/journeys/{journeyId}/activity/summary": {
			"get": {
				"operationId": "GetJourneyActivitySummary",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse___91_key-string_93__58_number__"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Journeys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "journeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "timeframe",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"day",
								"week",
								"month"
							]
						}
					}
				]
			}
		},
		"/insights/query": {
			"post": {
				"operationId": "GetInsights",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_InsightResponse_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"AI Insights"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InsightQuery"
							}
						}
					}
				}
			}
		},
		"/insights/queries": {
			"get": {
				"operationId": "GetRecentQueries",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_OrganizationInsights-at-recentQueries_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"AI Insights"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/insights": {
			"get": {
				"operationId": "GetOrganizationInsights",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_OrganizationInsights_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"AI Insights"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/events": {
			"post": {
				"operationId": "RecordEvent",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EventData_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RecordEventRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetEvents",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EventData-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "entityId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/events/search": {
			"get": {
				"operationId": "SearchEvents",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EventData-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "searchQuery",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/events/names": {
			"get": {
				"operationId": "GetUniqueEventNames",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_string-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/entities/list/entity_properties": {
			"get": {
				"operationId": "GetEntityProperties",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_string-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/entities": {
			"post": {
				"operationId": "CreateOrUpdateEntity",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EntityData_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateEntityRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListEntities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EntityWithSegments-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/entities/{entityId}": {
			"get": {
				"operationId": "GetEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EntityWithSegments_"
										},
										{}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entities/{entityId}/events": {
			"get": {
				"operationId": "GetEntityEvents",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EventData-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entities/search": {
			"get": {
				"operationId": "SearchEntities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_EntityData-Array_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "searchQuery",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entities/stats": {
			"get": {
				"operationId": "GetEntityStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse__totalEntities-number--oldestEntity-string--newestEntity-string--uniqueExternalIds-number__"
										},
										{}
									]
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/auth/authenticate": {
			"post": {
				"operationId": "Authenticate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_AuthData_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthRequest"
							}
						}
					}
				}
			}
		},
		"/auth/google": {
			"get": {
				"operationId": "GoogleAuth",
				"responses": {
					"302": {
						"description": "Redirect to Google"
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/google/callback": {
			"get": {
				"operationId": "GoogleAuthCallback",
				"responses": {
					"302": {
						"description": "Redirect after Google authentication"
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api-keys": {
			"post": {
				"operationId": "GenerateApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ApiKey_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateApiKeyRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetApiKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ApiKey-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api-keys/{id}": {
			"delete": {
				"operationId": "DeleteApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api/internal/v1"
		}
	]
}
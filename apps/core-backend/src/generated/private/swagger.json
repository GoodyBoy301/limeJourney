{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"SubscriptionStatus": {
				"enum": [
					"ACTIVE",
					"INACTIVE",
					"PAST_DUE",
					"CANCELLED"
				],
				"type": "string"
			},
			"Organization": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"subscriptionPeriodEnd": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"subscriptionPeriodStart": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"planId": {
						"type": "string",
						"nullable": true
					},
					"subscriptionStatus": {
						"$ref": "#/components/schemas/SubscriptionStatus"
					},
					"subscriptionId": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"subscriptionStatus",
					"name",
					"id"
				],
				"type": "object"
			},
			"ApiResponse_Organization-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Organization"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_void_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Organization_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Organization"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InvitationStatus": {
				"enum": [
					"PENDING",
					"ACCEPTED",
					"REJECTED"
				],
				"type": "string"
			},
			"Invitation": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/InvitationStatus"
					},
					"invitedBy": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"expiresAt",
					"status",
					"invitedBy",
					"organizationId",
					"email",
					"id"
				],
				"type": "object"
			},
			"ApiResponse_Invitation_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Invitation"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserRole": {
				"enum": [
					"ADMIN",
					"MEMBER"
				],
				"type": "string"
			},
			"OrganizationMember": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"organizationId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"role",
					"organizationId",
					"userId",
					"id"
				],
				"type": "object"
			},
			"ApiResponse_OrganizationMember_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationMember"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptInvitationDto": {
				"properties": {
					"invitationId": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"invitationId",
					"email",
					"name",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JsonValue": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					},
					{
						"type": "boolean"
					},
					{
						"$ref": "#/components/schemas/JsonObject"
					},
					{
						"$ref": "#/components/schemas/JsonArray"
					}
				],
				"nullable": true,
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches any valid JSON value."
			},
			"JsonObject": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/JsonValue"
				},
				"type": "object",
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON object.\nThis type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from."
			},
			"JsonArray": {
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON array.",
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"MessagingProfile": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string"
					},
					"credentials": {
						"$ref": "#/components/schemas/JsonValue"
					},
					"requiredFields": {
						"$ref": "#/components/schemas/JsonValue"
					},
					"integrationId": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"status",
					"credentials",
					"requiredFields",
					"integrationId",
					"organizationId",
					"name",
					"id"
				],
				"type": "object"
			},
			"ApiResponse_MessagingProfile_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MessagingProfile"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_MessagingProfile.Exclude_keyofMessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"integrationId": {
						"type": "string"
					},
					"requiredFields": {
						"$ref": "#/components/schemas/JsonValue"
					},
					"credentials": {
						"$ref": "#/components/schemas/JsonValue"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"integrationId",
					"requiredFields",
					"credentials",
					"status"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_MessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId_": {
				"$ref": "#/components/schemas/Pick_MessagingProfile.Exclude_keyofMessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Record_string.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"CreateMessagingProfileInput": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_MessagingProfile.id-or-createdAt-or-updatedAt-or-organizationId_"
					},
					{
						"properties": {
							"requiredFields": {
								"$ref": "#/components/schemas/Record_string.string_"
							},
							"credentials": {
								"$ref": "#/components/schemas/Record_string.string_"
							}
						},
						"required": [
							"requiredFields",
							"credentials"
						],
						"type": "object"
					}
				]
			},
			"MessagingIntegration": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"confidentialFields": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"requiredFields": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"providerName": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"confidentialFields",
					"requiredFields",
					"providerName",
					"type",
					"name",
					"id"
				],
				"type": "object"
			},
			"ApiResponse_MessagingIntegration-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/MessagingIntegration"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_MessagingProfile-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/MessagingProfile"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateMessagingProfileInput_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"integrationId": {
						"type": "string"
					},
					"requiredFields": {
						"allOf": [
							{
								"$ref": "#/components/schemas/JsonValue"
							},
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						]
					},
					"credentials": {
						"allOf": [
							{
								"$ref": "#/components/schemas/JsonValue"
							},
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						]
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ApiResponse_null_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"anyOf": [],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MessageLog": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"metadata": {
						"allOf": [
							{
								"$ref": "#/components/schemas/JsonValue"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					},
					"event": {
						"type": "string"
					},
					"messagingProfileId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"createdAt",
					"metadata",
					"status",
					"event",
					"messagingProfileId",
					"id"
				],
				"type": "object"
			},
			"ApiResponse_MessageLog-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/MessageLog"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_any_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_MessagingIntegration_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MessagingIntegration"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateMessagingIntegrationInput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"providerName": {
						"type": "string"
					},
					"requiredFields": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"confidentialFields": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"type",
					"providerName",
					"requiredFields",
					"confidentialFields"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateMessagingIntegrationInput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"providerName": {
						"type": "string"
					},
					"requiredFields": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AuthData": {
				"properties": {
					"token": {
						"type": "string"
					},
					"user": {
						"properties": {
							"role": {
								"type": "string"
							},
							"currentOrganizationId": {
								"type": "string"
							},
							"name": {
								"type": "string",
								"nullable": true
							},
							"email": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"role",
							"currentOrganizationId",
							"name",
							"email",
							"id"
						],
						"type": "object"
					}
				},
				"required": [
					"token",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_AuthData_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/AuthData"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiKey": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"key": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"lastUsedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"key",
					"organizationId",
					"createdAt",
					"lastUsedAt",
					"expiresAt",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ApiKey_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ApiKey"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GenerateApiKeyRequest": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ApiKey-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ApiKey"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "core-backend",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/docs": {
			"get": {
				"operationId": "GetSwaggerUI",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Documentation"
				],
				"security": [],
				"parameters": []
			}
		},
		"/organizations": {
			"get": {
				"operationId": "ListOrganizations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								}
							}
						}
					},
					"201": {
						"description": "Organization created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/switch/{organizationId}": {
			"put": {
				"operationId": "SwitchOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_void_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/organizations/{organizationId}": {
			"put": {
				"operationId": "UpdateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/{organizationId}/invite": {
			"post": {
				"operationId": "InviteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Invitation_"
								}
							}
						}
					},
					"201": {
						"description": "Invitation sent successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Invitation_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									}
								},
								"required": [
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/accept-invitation": {
			"post": {
				"operationId": "AcceptInvitation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_OrganizationMember_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AcceptInvitationDto"
							}
						}
					}
				}
			}
		},
		"/messaging-profiles": {
			"post": {
				"operationId": "CreateProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMessagingProfileInput"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetProfiles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/messaging-profiles/integrations": {
			"get": {
				"operationId": "GetIntegrations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/messaging-profiles/{id}": {
			"get": {
				"operationId": "GetProfileById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingProfile_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_CreateMessagingProfileInput_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/messaging-profiles/{id}/logs": {
			"get": {
				"operationId": "GetProfileLogs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessageLog-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 100,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"default": 0,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/messaging-profiles/{id}/analytics": {
			"get": {
				"operationId": "GetProfileAnalytics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"Messaging Profiles"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/messaging-integrations": {
			"post": {
				"operationId": "CreateIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration_"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMessagingIntegrationInput"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetIntegrations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/admin/messaging-integrations/{id}": {
			"put": {
				"operationId": "UpdateIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_MessagingIntegration_"
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateMessagingIntegrationInput"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Admin Messaging"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/authenticate": {
			"post": {
				"operationId": "Authenticate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_AuthData_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthRequest"
							}
						}
					}
				}
			}
		},
		"/auth/google": {
			"get": {
				"operationId": "GoogleAuth",
				"responses": {
					"302": {
						"description": "Redirect to Google"
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/google/callback": {
			"get": {
				"operationId": "GoogleAuthCallback",
				"responses": {
					"302": {
						"description": "Redirect after Google authentication"
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api-keys": {
			"post": {
				"operationId": "GenerateApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ApiKey_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateApiKeyRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetApiKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ApiKey-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api-keys/{id}": {
			"delete": {
				"operationId": "DeleteApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api/internal/v1"
		}
	]
}
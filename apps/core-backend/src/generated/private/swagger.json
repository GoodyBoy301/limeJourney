{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"SegmentCriterionType": {
				"enum": [
					"property",
					"event"
				],
				"type": "string"
			},
			"SegmentOperator": {
				"enum": [
					"equals",
					"not_equals",
					"greater_than",
					"less_than",
					"contains",
					"not_contains",
					"in",
					"not_in",
					"between",
					"not_between"
				],
				"type": "string"
			},
			"SegmentCriterion": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/SegmentCriterionType"
					},
					"field": {
						"type": "string"
					},
					"operator": {
						"$ref": "#/components/schemas/SegmentOperator"
					},
					"value": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "boolean"
							}
						]
					}
				},
				"required": [
					"type",
					"field",
					"operator",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LogicalOperator": {
				"enum": [
					"and",
					"or"
				],
				"type": "string"
			},
			"SegmentCondition": {
				"properties": {
					"criteria": {
						"items": {
							"$ref": "#/components/schemas/SegmentCriterion"
						},
						"type": "array"
					},
					"logicalOperator": {
						"$ref": "#/components/schemas/LogicalOperator"
					}
				},
				"required": [
					"criteria",
					"logicalOperator"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Segment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"$ref": "#/components/schemas/SegmentCondition"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"organizationId",
					"conditions",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Segment_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Segment"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateSegmentDTO": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"$ref": "#/components/schemas/SegmentCondition"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"description",
					"conditions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateSegmentDTO": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"conditions": {
						"items": {
							"$ref": "#/components/schemas/SegmentCondition"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_boolean_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"type": "boolean",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Segment-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Segment"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_string-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SegmentAnalytics": {
				"properties": {
					"segmentId": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"growthRate": {
						"type": "number",
						"format": "double"
					},
					"commonCharacteristics": {
						"items": {
							"properties": {},
							"additionalProperties": {},
							"type": "object"
						},
						"type": "array"
					},
					"conversionRate": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"segmentId",
					"size",
					"growthRate",
					"commonCharacteristics"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_SegmentAnalytics_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SegmentAnalytics"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"_36_Enums.SubscriptionStatus": {
				"type": "string",
				"enum": [
					"ACTIVE",
					"INACTIVE",
					"PAST_DUE",
					"CANCELLED"
				]
			},
			"DefaultSelection_Prisma._36_OrganizationPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"subscriptionPeriodEnd": {
						"type": "string",
						"format": "date-time"
					},
					"subscriptionPeriodStart": {
						"type": "string",
						"format": "date-time"
					},
					"planId": {
						"type": "string"
					},
					"subscriptionStatus": {
						"$ref": "#/components/schemas/_36_Enums.SubscriptionStatus"
					},
					"subscriptionId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"subscriptionPeriodEnd",
					"subscriptionPeriodStart",
					"planId",
					"subscriptionStatus",
					"subscriptionId",
					"name",
					"id"
				],
				"type": "object"
			},
			"Organization": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_OrganizationPayload_",
				"description": "Model Organization"
			},
			"ApiResponse_Organization-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Organization"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_void_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Organization_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Organization"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"_36_Enums.InvitationStatus": {
				"type": "string",
				"enum": [
					"PENDING",
					"ACCEPTED",
					"REJECTED"
				]
			},
			"DefaultSelection_Prisma._36_InvitationPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/_36_Enums.InvitationStatus"
					},
					"invitedBy": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"expiresAt",
					"status",
					"invitedBy",
					"organizationId",
					"email",
					"id"
				],
				"type": "object"
			},
			"Invitation": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_InvitationPayload_",
				"description": "Model Invitation"
			},
			"ApiResponse_Invitation_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Invitation"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"_36_Enums.UserRole": {
				"type": "string",
				"enum": [
					"ADMIN",
					"MEMBER"
				]
			},
			"DefaultSelection_Prisma._36_OrganizationMemberPayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"role": {
						"$ref": "#/components/schemas/_36_Enums.UserRole"
					},
					"organizationId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"role",
					"organizationId",
					"userId",
					"id"
				],
				"type": "object"
			},
			"OrganizationMember": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_OrganizationMemberPayload_",
				"description": "Model OrganizationMember"
			},
			"ApiResponse_OrganizationMember_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationMember"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptInvitationDto": {
				"properties": {
					"invitationId": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"invitationId",
					"email",
					"name",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.any_": {
				"properties": {},
				"additionalProperties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"EntityData": {
				"properties": {
					"id": {
						"type": "string"
					},
					"org_id": {
						"type": "string"
					},
					"external_id": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"org_id",
					"properties",
					"created_at",
					"updated_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityData_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EntityData"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateOrUpdateEntityRequest": {
				"properties": {
					"external_id": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"properties"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EntityWithSegments": {
				"properties": {
					"id": {
						"type": "string"
					},
					"org_id": {
						"type": "string"
					},
					"external_id": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"segments": {
						"items": {
							"properties": {
								"createdAt": {
									"type": "string",
									"format": "date-time"
								},
								"description": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"createdAt",
								"description",
								"name",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"org_id",
					"properties",
					"created_at",
					"updated_at",
					"segments"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityWithSegments_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EntityWithSegments"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityWithSegments-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EntityWithSegments"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EventData": {
				"properties": {
					"name": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"name",
					"properties"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EventData-and-_entity_id-string--timestamp-string__": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EventData"
							},
							{
								"properties": {
									"timestamp": {
										"type": "string"
									},
									"entity_id": {
										"type": "string"
									}
								},
								"required": [
									"timestamp",
									"entity_id"
								],
								"type": "object"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RecordEventRequest": {
				"properties": {
					"entityId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"entityId",
					"name",
					"properties"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EventData-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EventData"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_EntityData-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EntityData"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse__totalEntities-number--oldestEntity-string--newestEntity-string--uniqueExternalIds-number__": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"properties": {
							"uniqueExternalIds": {
								"type": "number",
								"format": "double"
							},
							"newestEntity": {
								"type": "string"
							},
							"oldestEntity": {
								"type": "string"
							},
							"totalEntities": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"uniqueExternalIds",
							"newestEntity",
							"oldestEntity",
							"totalEntities"
						],
						"type": "object",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthData": {
				"properties": {
					"user": {
						"properties": {
							"role": {
								"type": "string"
							},
							"organizationId": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"email": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"role",
							"organizationId",
							"name",
							"email",
							"id"
						],
						"type": "object"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_AuthData_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/AuthData"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_null_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"anyOf": [],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiKey": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"key": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"lastUsedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"key",
					"organizationId",
					"createdAt",
					"lastUsedAt",
					"expiresAt",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ApiKey_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ApiKey"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GenerateApiKeyRequest": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ApiKey-Array_": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ApiKey"
						},
						"type": "array",
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "core-backend",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/docs": {
			"get": {
				"operationId": "GetSwaggerUI",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Documentation"
				],
				"security": [],
				"parameters": []
			}
		},
		"/segments": {
			"post": {
				"operationId": "CreateSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateSegmentDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListSegments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/segments/{segmentId}": {
			"get": {
				"operationId": "GetSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateSegmentDTO"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/segments/{segmentId}/entities": {
			"get": {
				"operationId": "GetEntitiesInSegment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/segments/{segmentId}/analytics": {
			"get": {
				"operationId": "GetSegmentAnalytics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_SegmentAnalytics_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "segmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/segments/entity/{entityId}": {
			"get": {
				"operationId": "GetSegmentsForEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Segment-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Segments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/organizations": {
			"get": {
				"operationId": "ListOrganizations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								}
							}
						}
					},
					"201": {
						"description": "Organization created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/switch/{organizationId}": {
			"put": {
				"operationId": "SwitchOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_void_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/organizations/{organizationId}": {
			"put": {
				"operationId": "UpdateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Organization_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/{organizationId}/invite": {
			"post": {
				"operationId": "InviteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Invitation_"
								}
							}
						}
					},
					"201": {
						"description": "Invitation sent successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Invitation_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									}
								},
								"required": [
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/organizations/accept-invitation": {
			"post": {
				"operationId": "AcceptInvitation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_OrganizationMember_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AcceptInvitationDto"
							}
						}
					}
				}
			}
		},
		"/entities": {
			"post": {
				"operationId": "CreateOrUpdateEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_EntityData_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateEntityRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListEntities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_EntityWithSegments-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/entities/{entityId}": {
			"get": {
				"operationId": "GetEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_EntityWithSegments_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entities/entity_properties": {
			"get": {
				"operationId": "GetEntityProperties",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/entities/event": {
			"post": {
				"operationId": "RecordEvent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_EventData-and-_entity_id-string--timestamp-string__"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RecordEventRequest"
							}
						}
					}
				}
			}
		},
		"/entities/{entityId}/events": {
			"get": {
				"operationId": "GetEntityEvents",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_EventData-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entities/search": {
			"get": {
				"operationId": "SearchEntities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_EntityData-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "searchQuery",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entities/stats": {
			"get": {
				"operationId": "GetEntityStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse__totalEntities-number--oldestEntity-string--newestEntity-string--uniqueExternalIds-number__"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/auth/authenticate": {
			"post": {
				"operationId": "Authenticate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ApiResponse_AuthData_"
										},
										{}
									]
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthRequest"
							}
						}
					}
				}
			}
		},
		"/auth/google": {
			"get": {
				"operationId": "GoogleAuth",
				"responses": {
					"302": {
						"description": "Redirect to Google"
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/google/callback": {
			"get": {
				"operationId": "GoogleAuthCallback",
				"responses": {
					"302": {
						"description": "Redirect after Google authentication"
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api-keys": {
			"post": {
				"operationId": "GenerateApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ApiKey_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateApiKeyRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetApiKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ApiKey-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api-keys/{id}": {
			"delete": {
				"operationId": "DeleteApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"API Keys"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api/internal/v1"
		}
	]
}